#!/bin/bash
# 远端文件储存地址
Github="https://ghproxy.cyou/https://raw.githubusercontent.com/tuboshu66/tbs/master/test/test6"

# 定义变量
SERVER_NAME=$(sed -n '1p' /root/.status_name) # 请在 root 目录下创建 .status_name 文件并填入机器名称
DA=$(date "+%Y-%m-%d %H:%M:%S") # 标准的时间输出
nginx_Conf="/usr/local/nginx/mjnginx.conf"

# 测试与 GitHub 连通性
github_test=$(curl -s -k $Github/test)

# TG 通知部分，定义 TG_MESSAGE 后调用
function TG_BOT() {
  export TGSEND_TOKEN="5688173096:AAFyqcmKdfa1TaaBMnXNRgs7DGCZYQz5iS8"
  export TGSEND_CHATID="1088857444"
  curl -s -k "https://thingproxy.freeboard.io/fetch/https://api.telegram.org/bot$TGSEND_TOKEN/sendMessage" \
    --data-urlencode "chat_id=$TGSEND_CHATID" \
    --data-urlencode "text=$TG_MESSAGE" \
    > /dev/null &
}

# 同步 mjnginx.conf
function sync_mjnginx() {
  if [[ $github_test == "success" ]]; then
    rm -rf $nginx_Conf.new
    wget --no-check-certificate $Github/mjnginx.conf -O $nginx_Conf.new

    nginx_md5=$(md5sum $nginx_Conf | cut -d ' ' -f1)
    nginx_md5_n=$(md5sum $nginx_Conf.new | cut -d ' ' -f1)

    if [[ $nginx_md5 != $nginx_md5_n ]]; then
      echo "Nginx (mjnginx.conf) 与远端文件不符，正在同步"
      rm -rf $nginx_Conf
      mv $nginx_Conf.new $nginx_Conf
      systemctl reload nginx
      echo -e "\033[32m Nginx (mjnginx.conf) 文件已更新，同步完成 \033[0m"
      TG_MESSAGE="$SERVER_NAME Nginx (mjnginx.conf) 于 $DA 自动同步配置文件"
      TG_BOT
    else
      echo "Nginx (mjnginx.conf) 文件与远端相符，无需同步"
    fi
  else
    echo -e "\033[31m 与远端通信失败，同步中止 \033[0m"
  fi
}

action=$1
if [[ -n $action ]]; then
  if [[ $github_test == "success" ]]; then
    if [[ $action == "mjnginx" ]]; then
      sync_mjnginx
    fi
  else
    echo -e "\033[31m 远端通信失败，程序中止 \033[0m"
  fi
else
  echo -e "通信：\033[32m $github_test \033[0m"
  echo -e "请输入 \033[32m cnsync mjnginx \033[0m 来执行 mjnginx.conf 同步操作"
fi